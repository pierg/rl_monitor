; Auto-generated. Do not edit!


(cl:in-package atlas_msgs-msg)


;//! \htmlinclude AtlasState.msg.html

(cl:defclass <AtlasState> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (position
    :reader position
    :initarg :position
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (velocity
    :reader velocity
    :initarg :velocity
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (effort
    :reader effort
    :initarg :effort
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (kp_position
    :reader kp_position
    :initarg :kp_position
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (ki_position
    :reader ki_position
    :initarg :ki_position
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (kd_position
    :reader kd_position
    :initarg :kd_position
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (kp_velocity
    :reader kp_velocity
    :initarg :kp_velocity
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (i_effort_min
    :reader i_effort_min
    :initarg :i_effort_min
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (i_effort_max
    :reader i_effort_max
    :initarg :i_effort_max
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (k_effort
    :reader k_effort
    :initarg :k_effort
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0))
   (orientation
    :reader orientation
    :initarg :orientation
    :type geometry_msgs-msg:Quaternion
    :initform (cl:make-instance 'geometry_msgs-msg:Quaternion))
   (angular_velocity
    :reader angular_velocity
    :initarg :angular_velocity
    :type geometry_msgs-msg:Vector3
    :initform (cl:make-instance 'geometry_msgs-msg:Vector3))
   (linear_acceleration
    :reader linear_acceleration
    :initarg :linear_acceleration
    :type geometry_msgs-msg:Vector3
    :initform (cl:make-instance 'geometry_msgs-msg:Vector3))
   (l_foot
    :reader l_foot
    :initarg :l_foot
    :type geometry_msgs-msg:Wrench
    :initform (cl:make-instance 'geometry_msgs-msg:Wrench))
   (r_foot
    :reader r_foot
    :initarg :r_foot
    :type geometry_msgs-msg:Wrench
    :initform (cl:make-instance 'geometry_msgs-msg:Wrench))
   (l_hand
    :reader l_hand
    :initarg :l_hand
    :type geometry_msgs-msg:Wrench
    :initform (cl:make-instance 'geometry_msgs-msg:Wrench))
   (r_hand
    :reader r_hand
    :initarg :r_hand
    :type geometry_msgs-msg:Wrench
    :initform (cl:make-instance 'geometry_msgs-msg:Wrench)))
)

(cl:defclass AtlasState (<AtlasState>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <AtlasState>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'AtlasState)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name atlas_msgs-msg:<AtlasState> is deprecated: use atlas_msgs-msg:AtlasState instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:header-val is deprecated.  Use atlas_msgs-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'position-val :lambda-list '(m))
(cl:defmethod position-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:position-val is deprecated.  Use atlas_msgs-msg:position instead.")
  (position m))

(cl:ensure-generic-function 'velocity-val :lambda-list '(m))
(cl:defmethod velocity-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:velocity-val is deprecated.  Use atlas_msgs-msg:velocity instead.")
  (velocity m))

(cl:ensure-generic-function 'effort-val :lambda-list '(m))
(cl:defmethod effort-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:effort-val is deprecated.  Use atlas_msgs-msg:effort instead.")
  (effort m))

(cl:ensure-generic-function 'kp_position-val :lambda-list '(m))
(cl:defmethod kp_position-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:kp_position-val is deprecated.  Use atlas_msgs-msg:kp_position instead.")
  (kp_position m))

(cl:ensure-generic-function 'ki_position-val :lambda-list '(m))
(cl:defmethod ki_position-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:ki_position-val is deprecated.  Use atlas_msgs-msg:ki_position instead.")
  (ki_position m))

(cl:ensure-generic-function 'kd_position-val :lambda-list '(m))
(cl:defmethod kd_position-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:kd_position-val is deprecated.  Use atlas_msgs-msg:kd_position instead.")
  (kd_position m))

(cl:ensure-generic-function 'kp_velocity-val :lambda-list '(m))
(cl:defmethod kp_velocity-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:kp_velocity-val is deprecated.  Use atlas_msgs-msg:kp_velocity instead.")
  (kp_velocity m))

(cl:ensure-generic-function 'i_effort_min-val :lambda-list '(m))
(cl:defmethod i_effort_min-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:i_effort_min-val is deprecated.  Use atlas_msgs-msg:i_effort_min instead.")
  (i_effort_min m))

(cl:ensure-generic-function 'i_effort_max-val :lambda-list '(m))
(cl:defmethod i_effort_max-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:i_effort_max-val is deprecated.  Use atlas_msgs-msg:i_effort_max instead.")
  (i_effort_max m))

(cl:ensure-generic-function 'k_effort-val :lambda-list '(m))
(cl:defmethod k_effort-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:k_effort-val is deprecated.  Use atlas_msgs-msg:k_effort instead.")
  (k_effort m))

(cl:ensure-generic-function 'orientation-val :lambda-list '(m))
(cl:defmethod orientation-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:orientation-val is deprecated.  Use atlas_msgs-msg:orientation instead.")
  (orientation m))

(cl:ensure-generic-function 'angular_velocity-val :lambda-list '(m))
(cl:defmethod angular_velocity-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:angular_velocity-val is deprecated.  Use atlas_msgs-msg:angular_velocity instead.")
  (angular_velocity m))

(cl:ensure-generic-function 'linear_acceleration-val :lambda-list '(m))
(cl:defmethod linear_acceleration-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:linear_acceleration-val is deprecated.  Use atlas_msgs-msg:linear_acceleration instead.")
  (linear_acceleration m))

(cl:ensure-generic-function 'l_foot-val :lambda-list '(m))
(cl:defmethod l_foot-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:l_foot-val is deprecated.  Use atlas_msgs-msg:l_foot instead.")
  (l_foot m))

(cl:ensure-generic-function 'r_foot-val :lambda-list '(m))
(cl:defmethod r_foot-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:r_foot-val is deprecated.  Use atlas_msgs-msg:r_foot instead.")
  (r_foot m))

(cl:ensure-generic-function 'l_hand-val :lambda-list '(m))
(cl:defmethod l_hand-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:l_hand-val is deprecated.  Use atlas_msgs-msg:l_hand instead.")
  (l_hand m))

(cl:ensure-generic-function 'r_hand-val :lambda-list '(m))
(cl:defmethod r_hand-val ((m <AtlasState>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader atlas_msgs-msg:r_hand-val is deprecated.  Use atlas_msgs-msg:r_hand instead.")
  (r_hand m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<AtlasState>)))
    "Constants for message type '<AtlasState>"
  '((:BACK_LBZ . 0)
    (:BACK_BKZ . 0)
    (:BACK_MBY . 1)
    (:BACK_BKY . 1)
    (:BACK_UBX . 2)
    (:BACK_BKX . 2)
    (:NECK_AY . 3)
    (:NECK_RY . 3)
    (:L_LEG_UHZ . 4)
    (:L_LEG_HPZ . 4)
    (:L_LEG_MHX . 5)
    (:L_LEG_HPX . 5)
    (:L_LEG_LHY . 6)
    (:L_LEG_HPY . 6)
    (:L_LEG_KNY . 7)
    (:L_LEG_UAY . 8)
    (:L_LEG_AKY . 8)
    (:L_LEG_LAX . 9)
    (:L_LEG_AKX . 9)
    (:R_LEG_UHZ . 10)
    (:R_LEG_HPZ . 10)
    (:R_LEG_MHX . 11)
    (:R_LEG_HPX . 11)
    (:R_LEG_LHY . 12)
    (:R_LEG_HPY . 12)
    (:R_LEG_KNY . 13)
    (:R_LEG_UAY . 14)
    (:R_LEG_AKY . 14)
    (:R_LEG_LAX . 15)
    (:R_LEG_AKX . 15)
    (:L_ARM_USY . 16)
    (:L_ARM_SHY . 16)
    (:L_ARM_SHZ . 16)
    (:L_ARM_SHX . 17)
    (:L_ARM_ELY . 18)
    (:L_ARM_ELX . 19)
    (:L_ARM_UWY . 20)
    (:L_ARM_WRY . 20)
    (:L_ARM_MWX . 21)
    (:L_ARM_WRX . 21)
    (:R_ARM_USY . 22)
    (:R_ARM_SHY . 22)
    (:R_ARM_SHZ . 22)
    (:R_ARM_SHX . 23)
    (:R_ARM_ELY . 24)
    (:R_ARM_ELX . 25)
    (:R_ARM_UWY . 26)
    (:R_ARM_WRY . 26)
    (:R_ARM_MWX . 27)
    (:R_ARM_WRX . 27))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'AtlasState)))
    "Constants for message type 'AtlasState"
  '((:BACK_LBZ . 0)
    (:BACK_BKZ . 0)
    (:BACK_MBY . 1)
    (:BACK_BKY . 1)
    (:BACK_UBX . 2)
    (:BACK_BKX . 2)
    (:NECK_AY . 3)
    (:NECK_RY . 3)
    (:L_LEG_UHZ . 4)
    (:L_LEG_HPZ . 4)
    (:L_LEG_MHX . 5)
    (:L_LEG_HPX . 5)
    (:L_LEG_LHY . 6)
    (:L_LEG_HPY . 6)
    (:L_LEG_KNY . 7)
    (:L_LEG_UAY . 8)
    (:L_LEG_AKY . 8)
    (:L_LEG_LAX . 9)
    (:L_LEG_AKX . 9)
    (:R_LEG_UHZ . 10)
    (:R_LEG_HPZ . 10)
    (:R_LEG_MHX . 11)
    (:R_LEG_HPX . 11)
    (:R_LEG_LHY . 12)
    (:R_LEG_HPY . 12)
    (:R_LEG_KNY . 13)
    (:R_LEG_UAY . 14)
    (:R_LEG_AKY . 14)
    (:R_LEG_LAX . 15)
    (:R_LEG_AKX . 15)
    (:L_ARM_USY . 16)
    (:L_ARM_SHY . 16)
    (:L_ARM_SHZ . 16)
    (:L_ARM_SHX . 17)
    (:L_ARM_ELY . 18)
    (:L_ARM_ELX . 19)
    (:L_ARM_UWY . 20)
    (:L_ARM_WRY . 20)
    (:L_ARM_MWX . 21)
    (:L_ARM_WRX . 21)
    (:R_ARM_USY . 22)
    (:R_ARM_SHY . 22)
    (:R_ARM_SHZ . 22)
    (:R_ARM_SHX . 23)
    (:R_ARM_ELY . 24)
    (:R_ARM_ELX . 25)
    (:R_ARM_UWY . 26)
    (:R_ARM_WRY . 26)
    (:R_ARM_MWX . 27)
    (:R_ARM_WRX . 27))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <AtlasState>) ostream)
  "Serializes a message object of type '<AtlasState>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'position))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'position))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'velocity))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'velocity))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'effort))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'effort))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'kp_position))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'kp_position))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'ki_position))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'ki_position))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'kd_position))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'kd_position))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'kp_velocity))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'kp_velocity))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'i_effort_min))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'i_effort_min))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'i_effort_max))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-single-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)))
   (cl:slot-value msg 'i_effort_max))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'k_effort))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:write-byte (cl:ldb (cl:byte 8 0) ele) ostream))
   (cl:slot-value msg 'k_effort))
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'orientation) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'angular_velocity) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'linear_acceleration) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'l_foot) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'r_foot) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'l_hand) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'r_hand) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <AtlasState>) istream)
  "Deserializes a message object of type '<AtlasState>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'position) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'position)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'velocity) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'velocity)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'effort) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'effort)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'kp_position) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'kp_position)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'ki_position) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'ki_position)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'kd_position) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'kd_position)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'kp_velocity) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'kp_velocity)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'i_effort_min) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'i_effort_min)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'i_effort_max) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'i_effort_max)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-single-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'k_effort) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'k_effort)))
    (cl:dotimes (i __ros_arr_len)
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:aref vals i)) (cl:read-byte istream)))))
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'orientation) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'angular_velocity) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'linear_acceleration) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'l_foot) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'r_foot) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'l_hand) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'r_hand) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<AtlasState>)))
  "Returns string type for a message object of type '<AtlasState>"
  "atlas_msgs/AtlasState")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'AtlasState)))
  "Returns string type for a message object of type 'AtlasState"
  "atlas_msgs/AtlasState")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<AtlasState>)))
  "Returns md5sum for a message object of type '<AtlasState>"
  "06c10dd9f76008cef517f98aa49e4957")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'AtlasState)))
  "Returns md5sum for a message object of type 'AtlasState"
  "06c10dd9f76008cef517f98aa49e4957")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<AtlasState>)))
  "Returns full string definition for message of type '<AtlasState>"
  (cl:format cl:nil "#~%# This message has been carefully constructed to be less~%# than 1500 in size when serialized, to accommodate transfer~%# UDP.~%#~%# testing everything a robot needs~%Header header~%~%# Default joint indices used when publishing the~%# JointCommands joint_states topic below~%# For exmaple, if you subscribe to this message, then~%# msg.joint_states.position[atlas_msgs::AtlasStates::back_lbz] gives back~%# the position of the back_lbz.~%int32 back_lbz  = 0 # v1~%int32 back_bkz  = 0 # v3, v4~%int32 back_mby  = 1 # v1~%int32 back_bky  = 1 # v3, v4~%int32 back_ubx  = 2 # v1~%int32 back_bkx  = 2 # v3, v4~%int32 neck_ay   = 3 # v1~%int32 neck_ry   = 3 # v3, v4~%int32 l_leg_uhz = 4 # v1~%int32 l_leg_hpz = 4 # v3, v4~%int32 l_leg_mhx = 5 # v1~%int32 l_leg_hpx = 5 # v3, v4~%int32 l_leg_lhy = 6 # v1~%int32 l_leg_hpy = 6 # v3, v4~%int32 l_leg_kny = 7 # v3, v4~%int32 l_leg_uay = 8 # v1~%int32 l_leg_aky = 8 # v3, v4~%int32 l_leg_lax = 9 # v1~%int32 l_leg_akx = 9 # v3, v4~%int32 r_leg_uhz = 10 # v1~%int32 r_leg_hpz = 10 # v3, v4~%int32 r_leg_mhx = 11 # v1~%int32 r_leg_hpx = 11 # v3, v4~%int32 r_leg_lhy = 12 # v1~%int32 r_leg_hpy = 12 # v3, v4~%int32 r_leg_kny = 13 # v3, v4~%int32 r_leg_uay = 14 # v1~%int32 r_leg_aky = 14 # v3, v4~%int32 r_leg_lax = 15 # v1~%int32 r_leg_akx = 15 # v3, v4~%int32 l_arm_usy = 16 # v1~%int32 l_arm_shy = 16 # v3~%int32 l_arm_shz = 16 # v4~%int32 l_arm_shx = 17 # v3, v4~%int32 l_arm_ely = 18 # v3, v4~%int32 l_arm_elx = 19 # v3, v4~%int32 l_arm_uwy = 20 # v1~%int32 l_arm_wry = 20 # v3, v4~%int32 l_arm_mwx = 21 # v1~%int32 l_arm_wrx = 21 # v3, v4~%int32 r_arm_usy = 22 # v1~%int32 r_arm_shy = 22 # v3~%int32 r_arm_shz = 22 # v4~%int32 r_arm_shx = 23 # v3, v4~%int32 r_arm_ely = 24 # v3, v4~%int32 r_arm_elx = 25 # v3, v4~%int32 r_arm_uwy = 26 # v1~%int32 r_arm_wry = 26 # v3, v4~%int32 r_arm_mwx = 27 # v1~%int32 r_arm_wrx = 27 # v3, v4~%~%# repeating data from osrf_msgs/JointCommands as joint_states~%float32[] position~%float32[] velocity~%float32[] effort~%float32[] kp_position~%float32[] ki_position~%float32[] kd_position~%float32[] kp_velocity~%float32[] i_effort_min~%float32[] i_effort_max~%~%uint8[] k_effort       # k_effort can be an unsigned int 8value from 0 to 255, ~%                       # at run time, a double between 0 and 1 is obtained~%                       # by dividing by 255.0d.~%~%~%#sensor_msgs/Imu imu ~%geometry_msgs/Quaternion orientation~%geometry_msgs/Vector3 angular_velocity~%geometry_msgs/Vector3 linear_acceleration~%~%#atlas_msgs/ForceTorqueSensors force_torque_sensors~%geometry_msgs/Wrench l_foot~%geometry_msgs/Wrench r_foot~%geometry_msgs/Wrench l_hand~%geometry_msgs/Wrench r_hand~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%================================================================================~%MSG: geometry_msgs/Wrench~%# This represents force in free space, separated into~%# its linear and angular parts.~%Vector3  force~%Vector3  torque~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'AtlasState)))
  "Returns full string definition for message of type 'AtlasState"
  (cl:format cl:nil "#~%# This message has been carefully constructed to be less~%# than 1500 in size when serialized, to accommodate transfer~%# UDP.~%#~%# testing everything a robot needs~%Header header~%~%# Default joint indices used when publishing the~%# JointCommands joint_states topic below~%# For exmaple, if you subscribe to this message, then~%# msg.joint_states.position[atlas_msgs::AtlasStates::back_lbz] gives back~%# the position of the back_lbz.~%int32 back_lbz  = 0 # v1~%int32 back_bkz  = 0 # v3, v4~%int32 back_mby  = 1 # v1~%int32 back_bky  = 1 # v3, v4~%int32 back_ubx  = 2 # v1~%int32 back_bkx  = 2 # v3, v4~%int32 neck_ay   = 3 # v1~%int32 neck_ry   = 3 # v3, v4~%int32 l_leg_uhz = 4 # v1~%int32 l_leg_hpz = 4 # v3, v4~%int32 l_leg_mhx = 5 # v1~%int32 l_leg_hpx = 5 # v3, v4~%int32 l_leg_lhy = 6 # v1~%int32 l_leg_hpy = 6 # v3, v4~%int32 l_leg_kny = 7 # v3, v4~%int32 l_leg_uay = 8 # v1~%int32 l_leg_aky = 8 # v3, v4~%int32 l_leg_lax = 9 # v1~%int32 l_leg_akx = 9 # v3, v4~%int32 r_leg_uhz = 10 # v1~%int32 r_leg_hpz = 10 # v3, v4~%int32 r_leg_mhx = 11 # v1~%int32 r_leg_hpx = 11 # v3, v4~%int32 r_leg_lhy = 12 # v1~%int32 r_leg_hpy = 12 # v3, v4~%int32 r_leg_kny = 13 # v3, v4~%int32 r_leg_uay = 14 # v1~%int32 r_leg_aky = 14 # v3, v4~%int32 r_leg_lax = 15 # v1~%int32 r_leg_akx = 15 # v3, v4~%int32 l_arm_usy = 16 # v1~%int32 l_arm_shy = 16 # v3~%int32 l_arm_shz = 16 # v4~%int32 l_arm_shx = 17 # v3, v4~%int32 l_arm_ely = 18 # v3, v4~%int32 l_arm_elx = 19 # v3, v4~%int32 l_arm_uwy = 20 # v1~%int32 l_arm_wry = 20 # v3, v4~%int32 l_arm_mwx = 21 # v1~%int32 l_arm_wrx = 21 # v3, v4~%int32 r_arm_usy = 22 # v1~%int32 r_arm_shy = 22 # v3~%int32 r_arm_shz = 22 # v4~%int32 r_arm_shx = 23 # v3, v4~%int32 r_arm_ely = 24 # v3, v4~%int32 r_arm_elx = 25 # v3, v4~%int32 r_arm_uwy = 26 # v1~%int32 r_arm_wry = 26 # v3, v4~%int32 r_arm_mwx = 27 # v1~%int32 r_arm_wrx = 27 # v3, v4~%~%# repeating data from osrf_msgs/JointCommands as joint_states~%float32[] position~%float32[] velocity~%float32[] effort~%float32[] kp_position~%float32[] ki_position~%float32[] kd_position~%float32[] kp_velocity~%float32[] i_effort_min~%float32[] i_effort_max~%~%uint8[] k_effort       # k_effort can be an unsigned int 8value from 0 to 255, ~%                       # at run time, a double between 0 and 1 is obtained~%                       # by dividing by 255.0d.~%~%~%#sensor_msgs/Imu imu ~%geometry_msgs/Quaternion orientation~%geometry_msgs/Vector3 angular_velocity~%geometry_msgs/Vector3 linear_acceleration~%~%#atlas_msgs/ForceTorqueSensors force_torque_sensors~%geometry_msgs/Wrench l_foot~%geometry_msgs/Wrench r_foot~%geometry_msgs/Wrench l_hand~%geometry_msgs/Wrench r_hand~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%# 0: no frame~%# 1: global frame~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%================================================================================~%MSG: geometry_msgs/Wrench~%# This represents force in free space, separated into~%# its linear and angular parts.~%Vector3  force~%Vector3  torque~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <AtlasState>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'position) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'velocity) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'effort) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'kp_position) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'ki_position) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'kd_position) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'kp_velocity) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'i_effort_min) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'i_effort_max) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'k_effort) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 1)))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'orientation))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'angular_velocity))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'linear_acceleration))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'l_foot))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'r_foot))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'l_hand))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'r_hand))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <AtlasState>))
  "Converts a ROS message object to a list"
  (cl:list 'AtlasState
    (cl:cons ':header (header msg))
    (cl:cons ':position (position msg))
    (cl:cons ':velocity (velocity msg))
    (cl:cons ':effort (effort msg))
    (cl:cons ':kp_position (kp_position msg))
    (cl:cons ':ki_position (ki_position msg))
    (cl:cons ':kd_position (kd_position msg))
    (cl:cons ':kp_velocity (kp_velocity msg))
    (cl:cons ':i_effort_min (i_effort_min msg))
    (cl:cons ':i_effort_max (i_effort_max msg))
    (cl:cons ':k_effort (k_effort msg))
    (cl:cons ':orientation (orientation msg))
    (cl:cons ':angular_velocity (angular_velocity msg))
    (cl:cons ':linear_acceleration (linear_acceleration msg))
    (cl:cons ':l_foot (l_foot msg))
    (cl:cons ':r_foot (r_foot msg))
    (cl:cons ':l_hand (l_hand msg))
    (cl:cons ':r_hand (r_hand msg))
))
