<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>
// Set the goals to achieve
int goalSpeed = 90;       // Kmh
int goalTrackPos = 0;     // middle of the lane

// Reward returned
double reward;


// Variables that we get from the simulator
//double trackPos [-2, +2];     // position of the vehicle with respect to the position of the track (0 is middle)
typedef int[-2, +2] trackPosT; 
double speedX;            // speed of the vehicle on its X axis
double damage;        //
double lastDamage;
double angle;






</declaration>
	<template>
		<name x="5" y="5">TrackPos</name>
		<declaration>// Internal parameters
int fastSpeedPenalityIndex = 2;
int slowSpeedPenalityIndex = 1;
int counter = 0;

int trackPos;

// Return a positive value propotional to the error of the speed from the Goal, penalizing if it's too fast
double errorSpeed()
{
    if (speedX &gt;= goalSpeed)
    {
        return (speedX - goalSpeed)*fastSpeedPenalityIndex;
    }
    else
    {
        return (goalSpeed - speedX)*slowSpeedPenalityIndex;
    }

}

// Return a positive value propostional to the error fo the trackPos from the Goal
double errorTrackPos()
{
    if (trackPos &gt;= goalTrackPos)
    {
        return (trackPos - goalTrackPos);
    }
    else
    {
        return (goalTrackPos - trackPos);
    }
}


// Return a positive value propotional to the errors from the Goals
double eGoals()
{
    return errorSpeed() + errorTrackPos();
}


// Guard functions
bool isCenter()
{
    return (-5 &lt; trackPos &lt; 5);
}

bool isLimitRoad()
{
    return (-10 &lt; trackPos &lt; -5 || 5 &lt; trackPos &lt; 10);
}

bool isDamage()
{
    return (damage &gt; lastDamage);
}

bool isRightOffRoad()
{
    return (trackPos &lt;= -10);
}

bool isLeftOffRoad()
{
    return (trackPos &gt;= 10);
}

bool isStuck()
{
    return (trackPos &gt;= 10 || trackPos &lt;=10) &amp;&amp; speedX &lt; 10;
}

// Update functions

void rewardLimitRoad(){
    reward = 20 - eGoals();
}

void rewardLeftOffRoad(){
    reward = -20 + 10*angle - eGoals();
}

void rewardRightOffRoad(){
    reward = -20 - 10*angle - eGoals();
}

void rewardDamage(){
    reward = -40 - eGoals();
}

void rewardCenter(){
    reward = 50 - eGoals();
}

void rewardFromStuckedToLeftOffRoad()
{
    counter = 0;
    reward = -20 + 10*angle - eGoals();
}

void rewardFromStuckedToRightOffRoad()
{
    counter = 0;
    reward = -20 - 10*angle - eGoals();
}

void rewardStuck()
{
    counter += 10;
    reward = -20 - 10*angle - eGoals();
}</declaration>
		<location id="id0" x="-264" y="-697">
			<name x="-298" y="-731">leftOffRoad</name>
		</location>
		<location id="id1" x="178" y="-697">
			<name x="152" y="-740">limitRoad</name>
		</location>
		<location id="id2" x="178" y="-901">
			<name x="76" y="-927">centerRoad</name>
		</location>
		<location id="id3" x="178" y="-1028">
			<name x="127" y="-1037">start</name>
		</location>
		<location id="id4" x="662" y="-689">
			<name x="637" y="-765">rightOffRoad</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id4"/>
			<target ref="id1"/>
			<label kind="select" x="739" y="-722">move : trackPosT</label>
			<label kind="guard" x="314" y="-646">-10 &lt; trackPos &lt; -5 || 5 &lt; trackPos &lt; 10</label>
			<label kind="assignment" x="407" y="-646">reward = 0,
trackPos = trackPos + move</label>
			<nail x="577" y="-646"/>
			<nail x="212" y="-646"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="select" x="374" y="-739">move : trackPosT</label>
			<label kind="guard" x="374" y="-722">trackPos &lt;= -10</label>
			<label kind="assignment" x="382" y="-697">reward = -10,
trackPos = trackPos + move</label>
			<nail x="220" y="-706"/>
			<nail x="611" y="-706"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="select" x="-374" y="-782">move : trackPosT</label>
			<label kind="guard" x="-425" y="-697">trackPos &lt;= -10</label>
			<label kind="assignment" x="-459" y="-680">reward = -10,
trackPos = trackPos + move</label>
			<nail x="-323" y="-655"/>
			<nail x="-323" y="-697"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="select" x="-153" y="-748">move : trackPosT</label>
			<label kind="guard" x="-153" y="-723">-10 &lt; trackPos &lt; -5 || 5 &lt; trackPos &lt; 10</label>
			<label kind="assignment" x="-51" y="-723">reward = 0,
trackPos = trackPos + move</label>
			<nail x="-221" y="-706"/>
			<nail x="127" y="-706"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="select" x="-203" y="-740">move : trackPosT</label>
			<label kind="guard" x="-162" y="-689">trackPos &lt;= -10</label>
			<label kind="assignment" x="-51" y="-689">reward = -10,
trackPos = trackPos + move</label>
			<nail x="135" y="-689"/>
			<nail x="-221" y="-689"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="select" x="195" y="-718">move : trackPosT</label>
			<label kind="guard" x="136" y="-612">-10 &lt; trackPos &lt; -5 || 5 &lt; trackPos &lt; 10</label>
			<label kind="assignment" x="119" y="-586">reward = 0,
trackPos = trackPos + move</label>
			<nail x="136" y="-620"/>
			<nail x="212" y="-612"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="select" x="510" y="-857">move : trackPosT</label>
			<label kind="guard" x="502" y="-925">-5 &lt; trackPos &lt; 5</label>
			<label kind="assignment" x="510" y="-899">reward = 5,
trackPos = trackPos + move</label>
			<nail x="450" y="-773"/>
			<nail x="485" y="-942"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="select" x="204" y="-858">move : trackPosT</label>
			<label kind="guard" x="144" y="-833">-5 &lt; trackPos &lt; 5</label>
			<label kind="assignment" x="127" y="-816">reward = 5,
trackPos = trackPos + move</label>
			<nail x="162" y="-837"/>
			<nail x="194" y="-837"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="select" x="-119" y="-900">move : trackPosT</label>
			<label kind="guard" x="-263" y="-883">-10 &lt; trackPos &lt; -5 || 5 &lt; trackPos &lt; 10</label>
			<label kind="assignment" x="-187" y="-867">reward = 0,
trackPos = trackPos + move</label>
			<nail x="42" y="-901"/>
			<nail x="17" y="-935"/>
			<nail x="25" y="-756"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="187" y="-1011">move : trackPosT</label>
			<label kind="assignment" x="195" y="-986">reward = 5,
trackPos = trackPos + move</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="select" x="731" y="-756">move : trackPosT</label>
			<label kind="guard" x="730" y="-689">trackPos &lt;= -10</label>
			<label kind="assignment" x="730" y="-672">reward = -10,
trackPos = trackPos + move</label>
			<nail x="722" y="-655"/>
			<nail x="722" y="-689"/>
		</transition>
	</template>
	<template>
		<name>Environment</name>
		<declaration>



</declaration>
		<location id="id5" x="-773" y="-595">
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="select" x="-849" y="-705">trackPos : int [-2, +2]</label>
			<nail x="-858" y="-680"/>
			<nail x="-688" y="-680"/>
		</transition>
	</template>
	<template>
		<name>Speed</name>
		<declaration>double angle;

</declaration>
		<location id="id6" x="-136" y="-365">
			<name x="-170" y="-348">Turning</name>
		</location>
		<location id="id7" x="-127" y="-595">
			<name x="-110" y="-603">GoingStraight</name>
		</location>
		<location id="id8" x="-127" y="-748">
			<name x="-144" y="-799">start</name>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<nail x="-110" y="-391"/>
			<nail x="-110" y="-561"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<nail x="-153" y="-561"/>
			<nail x="-153" y="-391"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = TrackPos();

// List one or more processes to be composed into a system.
system Process;</system>
	<queries>
		<query>
			<formula>A[](Process.isRightOffRoad() imply not Process.isDamage())
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](Process.rightOffRoad imply reward &lt; 0)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](Process.rightOffRoad imply E&lt;&gt; reward &lt;= -2)
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
