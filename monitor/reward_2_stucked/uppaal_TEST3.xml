<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Precision factor: from double to int
const int F = 100;

// Set the goals to achieve
int goalSpeed = 90;       // Kmh
int goalTrackPos = 0;     // middle of the lane

// Reward returned
int reward;


// Distance between the car and the track axis. 
// The value is normalized w.r.t to the track width: 
// it is 0 when car is on the axis, -1 when the car is on the right edge of the track and +1 when it is on the left edge of the car. 
// Values greater than 1 or smaller than -1 mean that the car is outside of the track.
int trackPos;


// Speed of the car along the longitudinal axis of the car.
int speedX;



</declaration>
	<template>
		<name x="5" y="5">TrackPos</name>
		<declaration>

// Internal parameters
int fastSpeedPenalityIndex = 2;
int slowSpeedPenalityIndex = 1;
int counter = 0;


// Guard functions
bool isCenter()
{
    return (-100 &lt; trackPos &lt; 100);
}

bool isLimitRoad()
{   
    return (-2*F &lt; trackPos &lt; -1*F || 1*F &lt; trackPos &lt; 2*F);
}

bool isRightOffRoad()
{
    return (trackPos &lt;= -2*F);
}

bool isLeftOffRoad()
{
    return (trackPos &gt;= 2*F);
}

// Update functions

void rewardLimitRoad(){
    reward = 0;
}

void rewardLeftOffRoad(){
    reward = -10;
}

void rewardRightOffRoad(){
    reward = -10;
}

void rewardCenter(){
    reward = +20;
}
</declaration>
		<location id="id0" x="-289" y="-773">
			<name x="-323" y="-807">leftOffRoad</name>
		</location>
		<location id="id1" x="153" y="-773">
			<name x="127" y="-816">limitRoad</name>
		</location>
		<location id="id2" x="153" y="-977">
			<name x="51" y="-1003">centerRoad</name>
		</location>
		<location id="id3" x="153" y="-1113">
			<name x="102" y="-1122">start</name>
		</location>
		<location id="id4" x="637" y="-765">
			<name x="613" y="-797">rightOffRoad</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id4"/>
			<target ref="id1"/>
			<label kind="guard" x="306" y="-765">isLimitRoad()</label>
			<label kind="assignment" x="399" y="-765">rewardLimitRoad()</label>
			<nail x="569" y="-765"/>
			<nail x="204" y="-765"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="280" y="-799">isRightOffRoad()</label>
			<label kind="assignment" x="399" y="-799">rewardRightOffRoad()</label>
			<nail x="195" y="-782"/>
			<nail x="586" y="-782"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-450" y="-773">isLeftOffRoad()</label>
			<label kind="assignment" x="-484" y="-756">rewardLeftOffRoad()</label>
			<nail x="-348" y="-731"/>
			<nail x="-348" y="-773"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-178" y="-799">isLimitRoad()</label>
			<label kind="assignment" x="-76" y="-799">rewardLimitRoad()</label>
			<nail x="-246" y="-782"/>
			<nail x="102" y="-782"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-187" y="-765">isLeftOffRoad()</label>
			<label kind="assignment" x="-76" y="-765">rewardLeftOffRoad()</label>
			<nail x="110" y="-765"/>
			<nail x="-246" y="-765"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="187" y="-714">isLimitRoad()</label>
			<label kind="assignment" x="187" y="-697">rewardLimitRoad()</label>
			<nail x="187" y="-714"/>
			<nail x="212" y="-722"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="221" y="-943">isCenter()</label>
			<label kind="assignment" x="221" y="-926">rewardCenter()</label>
			<nail x="212" y="-799"/>
			<nail x="212" y="-952"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="119" y="-909">isCenter()</label>
			<label kind="assignment" x="102" y="-892">rewardCenter()</label>
			<nail x="137" y="-913"/>
			<nail x="169" y="-913"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="0" y="-943">isLimitRoad()</label>
			<label kind="assignment" x="-34" y="-926">rewardLimitRoad()</label>
			<nail x="93" y="-952"/>
			<nail x="93" y="-799"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="161" y="-1079">isCenter()</label>
			<label kind="assignment" x="161" y="-1062">trackPos = 0,
rewardCenter()</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="705" y="-765">isRightOffRoad()</label>
			<label kind="assignment" x="705" y="-748">rewardRightOffRoad()</label>
			<nail x="697" y="-731"/>
			<nail x="697" y="-765"/>
		</transition>
	</template>
	<template>
		<name>Sim_TrackPos</name>
		<declaration>// We assume a limit between -5 and +5 (* FACTOR)
typedef int[-500, +500] trackPosT;</declaration>
		<location id="id5" x="-246" y="-34">
			<name x="-399" y="-42">StartEnv</name>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="select" x="-314" y="-255">i_trackPos : trackPosT</label>
			<label kind="assignment" x="-306" y="-195">trackPos = i_trackPos</label>
			<nail x="-314" y="-110"/>
			<nail x="-178" y="-110"/>
		</transition>
	</template>
	<template>
		<name>Sim_Speed</name>
		<declaration>
// We assume a limit between 0 and 100 ( *FACTOR)
typedef int[0, 10000] speedXT;

</declaration>
		<location id="id6" x="0" y="0">
		</location>
		<init ref="id6"/>
	</template>
	<template>
		<name>Speed</name>
		<declaration>clock t;

double angle;

</declaration>
		<location id="id7" x="-136" y="-365">
			<name x="-170" y="-348">Turning</name>
		</location>
		<location id="id8" x="-127" y="-595">
			<name x="-110" y="-603">GoingStraight</name>
		</location>
		<location id="id9" x="-127" y="-748">
			<name x="-144" y="-799">start</name>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<nail x="-110" y="-391"/>
			<nail x="-110" y="-561"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<nail x="-153" y="-561"/>
			<nail x="-153" y="-391"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
		</transition>
	</template>
	<system>
// List one or more processes to be composed into a system.
system TrackPos, Sim_TrackPos;</system>
	<queries>
		<query>
			<formula>A[](Process.rightOffRoad imply reward &lt;= -2)
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
