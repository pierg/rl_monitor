Imports
{
	import SocketServerPackage.EchoServer;
}

Global{
        
	Events{
		rlevent(obs, preobs) = {EchoServer.rlevent()}
		reset() = {EchoServer.reset()}
	}

	Property OpponentsRight{

		States{
			Normal{carToTheRight carCloseToTheRight rightFree carFarToTheRight default }
			Starting{start}
		}

		Transitions{
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carToTheRight->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseToTheRight->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			rightFree->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarToTheRight->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseToTheRight->carFarToTheRight[rlevent\EchoServer.isRightCarDetectedFar()\EchoServer.rewardRightCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carFarToTheRight++;]
			carFarToTheRight->carCloseToTheRight[rlevent\EchoServer.isRightCarDetectedNearby()\EchoServer.rewardRightCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carCloseToTheRight++;]
			carCloseToTheRight->rightFree[rlevent\EchoServer.isRightFree()\EchoServer.rewardRightFree();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_rightFree++;]
			rightFree->carCloseToTheRight[rlevent\EchoServer.isRightCarDetectedNearby()\EchoServer.rewardRightCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carCloseToTheRight++;]
			carToTheRight->rightFree[rlevent\EchoServer.isRightFree()\EchoServer.rewardRightFree();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_rightFree++;]
			rightFree->carToTheRight[rlevent\EchoServer.isRightCarDetected()\EchoServer.rewardRightCar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carToTheRight++;]
			carCloseToTheRight->carCloseToTheRight[rlevent\EchoServer.isRightCarDetectedNearby()\EchoServer.rewardRightCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carCloseToTheRight++;]
			carToTheRight->carToTheRight[rlevent\EchoServer.isRightCarDetected()\EchoServer.rewardRightCar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carToTheRight++;]
			carCloseToTheRight->carToTheRight[rlevent\EchoServer.isRightCarDetected()\EchoServer.rewardRightCar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carToTheRight++;]
			start->carCloseToTheRight[rlevent\EchoServer.isRightCarDetectedNearby()\EchoServer.rewardRightCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carCloseToTheRight++;]
			carToTheRight->carCloseToTheRight[rlevent\EchoServer.isRightCarDetectedNearby()\EchoServer.rewardRightCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carCloseToTheRight++;]
			start->carToTheRight[rlevent\EchoServer.isRightCarDetected()\EchoServer.rewardRightCar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carToTheRight++;]
			carToTheRight->carFarToTheRight[rlevent\EchoServer.isRightCarDetectedFar()\EchoServer.rewardRightCar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carFarToTheRight++;]
			carFarToTheRight->carToTheRight[rlevent\EchoServer.isRightCarDetected()\EchoServer.rewardRightCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carToTheRight++;]
			carFarToTheRight->carFarToTheRight[rlevent\EchoServer.isRightCarDetectedFar()\EchoServer.rewardRightCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carFarToTheRight++;]
			rightFree->rightFree[rlevent\EchoServer.isRightFree()\EchoServer.rewardRightFree();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_rightFree++;]
			carFarToTheRight->rightFree[rlevent\EchoServer.isRightFree()\EchoServer.rewardRightFree();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_rightFree++;]
			start->carFarToTheRight[rlevent\EchoServer.isRightCarDetectedFar()\EchoServer.rewardRightCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carFarToTheRight++;]
			rightFree->carFarToTheRight[rlevent\EchoServer.isRightCarDetectedFar()\EchoServer.rewardRightCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_carFarToTheRight++;]
			start->rightFree[rlevent\EchoServer.isRightFree()\EchoServer.rewardRightFree();EchoServer.propertyChecked();EchoServer.c_OpponentsRight_rightFree++;]
			carToTheRight->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseToTheRight->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			rightFree->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarToTheRight->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]

		}

	}
	Property OpponentsBehind{

		States{
			Normal{carCloseBehind carBehind carFarbehind behindFree default }
			Starting{start}
		}

		Transitions{
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseBehind->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carBehind->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarbehind->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			behindFree->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseBehind->carFarbehind[rlevent\EchoServer.isCarDetectedFarBehind()\EchoServer.rewardBehindCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carFarbehind++;]
			carFarbehind->carCloseBehind[rlevent\EchoServer.isCarDetectedNearbyBehind()\EchoServer.rewardBehindCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carCloseBehind++;]
			behindFree->carCloseBehind[rlevent\EchoServer.isCarDetectedNearbyBehind()\EchoServer.rewardBehindCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carCloseBehind++;]
			behindFree->carBehind[rlevent\EchoServer.isCarDetectedBehind()\EchoServer.rewardBehindCar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carBehind++;]
			carCloseBehind->behindFree[rlevent\EchoServer.isFreeBehind()\EchoServer.rewardBehindFree();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_behindFree++;]
			carBehind->behindFree[rlevent\EchoServer.isFreeBehind()\EchoServer.rewardBehindFree();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_behindFree++;]
			start->carCloseBehind[rlevent\EchoServer.isCarDetectedNearbyBehind()\EchoServer.rewardBehindCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carCloseBehind++;]
			start->carBehind[rlevent\EchoServer.isCarDetectedBehind()\EchoServer.rewardBehindCar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carBehind++;]
			start->carFarbehind[rlevent\EchoServer.isCarDetectedFarBehind()\EchoServer.rewardBehindCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carFarbehind++;]
			start->behindFree[rlevent\EchoServer.isFreeBehind()\EchoServer.rewardBehindFree();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_behindFree++;]
			carCloseBehind->carCloseBehind[rlevent\EchoServer.isCarDetectedNearbyBehind()\EchoServer.rewardBehindCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carCloseBehind++;]
			carBehind->carBehind[rlevent\EchoServer.isCarDetectedBehind()\EchoServer.rewardBehindCar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carBehind++;]
			carCloseBehind->carBehind[rlevent\EchoServer.isCarDetectedBehind()\EchoServer.rewardBehindCar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carBehind++;]
			carBehind->carCloseBehind[rlevent\EchoServer.isCarDetectedNearbyBehind()\EchoServer.rewardBehindCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carCloseBehind++;]
			carBehind->carFarbehind[rlevent\EchoServer.isCarDetectedFarBehind()\EchoServer.rewardBehindCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carFarbehind++;]
			carFarbehind->carBehind[rlevent\EchoServer.isCarDetectedBehind()\EchoServer.rewardBehindCar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carBehind++;]
			carFarbehind->carFarbehind[rlevent\EchoServer.isCarDetectedFarBehind()\EchoServer.rewardBehindCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carFarbehind++;]
			behindFree->behindFree[rlevent\EchoServer.isFreeBehind()\EchoServer.rewardBehindFree();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_behindFree++;]
			carFarbehind->behindFree[rlevent\EchoServer.isFreeBehind()\EchoServer.rewardBehindFree();EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_behindFree++;]
			behindFree->carFarbehind[rlevent\\EchoServer.propertyChecked();EchoServer.c_OpponentsBehind_carFarbehind++;]
			start->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseBehind->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carBehind->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarbehind->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			behindFree->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]

		}

	}
	Property OpponentsLeft{

		States{
			Normal{carCloseToTheLeft carToTheLeft carFarToTheLeft leftFree default }
			Starting{start}
		}

		Transitions{
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseToTheLeft->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carToTheLeft->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarToTheLeft->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			leftFree->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseToTheLeft->carFarToTheLeft[rlevent\EchoServer.isLeftCarDetectedFar()\EchoServer.rewardLeftCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carFarToTheLeft++;]
			carFarToTheLeft->carCloseToTheLeft[rlevent\EchoServer.isLeftCarDetectedNearby()\EchoServer.rewardLeftCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carCloseToTheLeft++;]
			leftFree->carCloseToTheLeft[rlevent\EchoServer.isLeftCarDetectedNearby()\EchoServer.rewardLeftCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carCloseToTheLeft++;]
			leftFree->carToTheLeft[rlevent\EchoServer.isLeftCarDetected()\EchoServer.rewardLeftCar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carToTheLeft++;]
			carCloseToTheLeft->leftFree[rlevent\EchoServer.isLeftFree()\EchoServer.rewardLeftFree();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_leftFree++;]
			carToTheLeft->leftFree[rlevent\EchoServer.isLeftFree()\EchoServer.rewardLeftFree();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_leftFree++;]
			carCloseToTheLeft->carCloseToTheLeft[rlevent\EchoServer.isLeftCarDetectedNearby()\EchoServer.rewardLeftCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carCloseToTheLeft++;]
			carToTheLeft->carToTheLeft[rlevent\EchoServer.isLeftCarDetected()\EchoServer.rewardLeftCar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carToTheLeft++;]
			carCloseToTheLeft->carToTheLeft[rlevent\EchoServer.isLeftCarDetected()\EchoServer.rewardLeftCar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carToTheLeft++;]
			start->carCloseToTheLeft[rlevent\EchoServer.isLeftCarDetectedNearby()\EchoServer.rewardLeftCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carCloseToTheLeft++;]
			carToTheLeft->carCloseToTheLeft[rlevent\EchoServer.isLeftCarDetectedNearby()\EchoServer.rewardLeftCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carCloseToTheLeft++;]
			start->carToTheLeft[rlevent\EchoServer.isLeftCarDetected()\EchoServer.rewardLeftCar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carToTheLeft++;]
			carToTheLeft->carFarToTheLeft[rlevent\EchoServer.isLeftCarDetectedFar()\EchoServer.rewardLeftCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carFarToTheLeft++;]
			carFarToTheLeft->carToTheLeft[rlevent\EchoServer.isLeftCarDetected()\EchoServer.rewardLeftCar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carToTheLeft++;]
			carFarToTheLeft->carFarToTheLeft[rlevent\EchoServer.isLeftCarDetectedFar()\EchoServer.rewardLeftCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carFarToTheLeft++;]
			leftFree->leftFree[rlevent\EchoServer.isLeftFree()\EchoServer.rewardLeftFree();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_leftFree++;]
			carFarToTheLeft->leftFree[rlevent\EchoServer.isLeftFree()\EchoServer.rewardLeftFree();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_leftFree++;]
			start->carFarToTheLeft[rlevent\EchoServer.isLeftCarDetectedFar()\EchoServer.rewardLeftCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carFarToTheLeft++;]
			leftFree->carFarToTheLeft[rlevent\EchoServer.isLeftCarDetectedFar()\EchoServer.rewardLeftCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_carFarToTheLeft++;]
			start->leftFree[rlevent\EchoServer.isLeftFree()\EchoServer.rewardLeftFree();EchoServer.propertyChecked();EchoServer.c_OpponentsLeft_leftFree++;]
			carCloseToTheLeft->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carToTheLeft->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarToTheLeft->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			leftFree->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]

		}

	}
	Property OpponentsAhead{

		States{
			Normal{carCloseAhead carAhead carFarAhead frontFree default }
			Starting{start}
		}

		Transitions{
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseAhead->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carAhead->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarAhead->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			frontFree->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarAhead->carCloseAhead[rlevent\\EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carCloseAhead++;]
			carCloseAhead->carFarAhead[rlevent\EchoServer.isFrontCarDetectedFar()\EchoServer.rewardFrontCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carFarAhead++;]
			frontFree->carCloseAhead[rlevent\EchoServer.isFrontCarDetectedNearby()\EchoServer.rewardFrontCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carCloseAhead++;]
			frontFree->carAhead[rlevent\EchoServer.isFrontCarDetected()\EchoServer.rewardFrontCar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carAhead++;]
			carCloseAhead->frontFree[rlevent\EchoServer.isFrontFree()\EchoServer.rewardFrontFree();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_frontFree++;]
			carAhead->frontFree[rlevent\EchoServer.isFrontFree()\EchoServer.rewardFrontFree();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_frontFree++;]
			start->carCloseAhead[rlevent\EchoServer.isFrontCarDetectedNearby()\EchoServer.rewardFrontCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carCloseAhead++;]
			start->carAhead[rlevent\EchoServer.isFrontCarDetected()\EchoServer.rewardFrontCar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carAhead++;]
			start->carFarAhead[rlevent\EchoServer.isFrontCarDetectedFar()\EchoServer.rewardFrontCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carFarAhead++;]
			start->frontFree[rlevent\EchoServer.isFrontFree()\EchoServer.rewardFrontFree();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_frontFree++;]
			carCloseAhead->carCloseAhead[rlevent\EchoServer.isFrontCarDetectedNearby()\EchoServer.rewardFrontCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carCloseAhead++;]
			carAhead->carAhead[rlevent\EchoServer.isFrontCarDetected()\EchoServer.rewardFrontCar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carAhead++;]
			carCloseAhead->carAhead[rlevent\EchoServer.isFrontCarDetected()\EchoServer.rewardFrontCar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carAhead++;]
			carAhead->carCloseAhead[rlevent\EchoServer.isFrontCarDetectedNearby()\EchoServer.rewardFrontCarClose();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carCloseAhead++;]
			carAhead->carFarAhead[rlevent\EchoServer.isFrontCarDetectedFar()\EchoServer.rewardFrontCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carFarAhead++;]
			carFarAhead->carAhead[rlevent\EchoServer.isFrontCarDetected()\EchoServer.rewardFrontCar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carAhead++;]
			carFarAhead->carFarAhead[rlevent\EchoServer.isFrontCarDetectedFar()\EchoServer.rewardFrontCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carFarAhead++;]
			frontFree->frontFree[rlevent\EchoServer.isFrontFree()\EchoServer.rewardFrontFree();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_frontFree++;]
			carFarAhead->frontFree[rlevent\EchoServer.isFrontFree()\EchoServer.rewardFrontFree();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_frontFree++;]
			frontFree->carFarAhead[rlevent\EchoServer.isFrontCarDetectedFar()\EchoServer.rewardFrontCarFar();EchoServer.propertyChecked();EchoServer.c_OpponentsAhead_carFarAhead++;]
			start->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carCloseAhead->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carAhead->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			carFarAhead->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			frontFree->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]

		}

	}
	Property TrackPos{

		States{
			Normal{leftOffRoad limitRoad centerRoad rightOffRoad default }
			Starting{start}
		}

		Transitions{
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			leftOffRoad->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			limitRoad->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			centerRoad->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			rightOffRoad->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			rightOffRoad->limitRoad[rlevent\EchoServer.isLimitRoad()\EchoServer.rewardLimitRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_limitRoad++;]
			limitRoad->rightOffRoad[rlevent\EchoServer.isRightOffRoad()\EchoServer.rewardRightOffRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_rightOffRoad++;]
			leftOffRoad->leftOffRoad[rlevent\EchoServer.isLeftOffRoad()\EchoServer.rewardLeftOffRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_leftOffRoad++;]
			leftOffRoad->limitRoad[rlevent\EchoServer.isLimitRoad()\EchoServer.rewardLimitRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_limitRoad++;]
			limitRoad->leftOffRoad[rlevent\EchoServer.isLeftOffRoad()\EchoServer.rewardLeftOffRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_leftOffRoad++;]
			limitRoad->limitRoad[rlevent\EchoServer.isLimitRoad()\EchoServer.rewardLimitRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_limitRoad++;]
			limitRoad->centerRoad[rlevent\EchoServer.isCenter()\EchoServer.rewardCenter();EchoServer.propertyChecked();EchoServer.c_TrackPos_centerRoad++;]
			centerRoad->centerRoad[rlevent\EchoServer.isCenter()\EchoServer.rewardCenter();EchoServer.propertyChecked();EchoServer.c_TrackPos_centerRoad++;]
			centerRoad->limitRoad[rlevent\EchoServer.isLimitRoad()\EchoServer.rewardLimitRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_limitRoad++;]
			start->centerRoad[rlevent\\EchoServer.propertyChecked();EchoServer.c_TrackPos_centerRoad++;]
			rightOffRoad->rightOffRoad[rlevent\EchoServer.isRightOffRoad()\EchoServer.rewardRightOffRoad();EchoServer.propertyChecked();EchoServer.c_TrackPos_rightOffRoad++;]
			leftOffRoad->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			limitRoad->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			centerRoad->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			rightOffRoad->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]

		}

	}
	Property Speed{

		States{
			Normal{Stuck Curve GoingStraight default }
			Starting{start}
		}

		Transitions{
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			Stuck->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			Curve->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			GoingStraight->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			Stuck->Stuck[rlevent\EchoServer.isStuck()\EchoServer.rewardStuck();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_Stuck++;]
			Curve->Curve[rlevent\EchoServer.curveIsComing()\EchoServer.rewardTurning();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_Curve++;]
			GoingStraight->GoingStraight[rlevent\EchoServer.isGoingStraight()\EchoServer.rewardStraight();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_GoingStraight++;]
			GoingStraight->Stuck[rlevent\EchoServer.isStuck()\EchoServer.rewardStuck();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_Stuck++;]
			Stuck->GoingStraight[rlevent\EchoServer.isGoingStraight()\EchoServer.rewardStraight();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_GoingStraight++;]
			Stuck->Curve[rlevent\EchoServer.curveIsComing()\EchoServer.rewardTurning();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_Curve++;]
			Curve->Stuck[rlevent\EchoServer.isStuck()\EchoServer.rewardStuck();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_Stuck++;]
			Curve->GoingStraight[rlevent\EchoServer.isGoingStraight()\EchoServer.rewardStraight();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_GoingStraight++;]
			GoingStraight->Curve[rlevent\EchoServer.curveIsComing()\EchoServer.rewardTurning();EchoServer.updateStuckCounter();EchoServer.propertyChecked();EchoServer.c_Speed_Curve++;]
			start->GoingStraight[rlevent\\EchoServer.propertyChecked();EchoServer.c_Speed_GoingStraight++;]
			Stuck->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			Curve->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			GoingStraight->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]

		}

	}
	Property Damage{

		States{
			Normal{damaged normal default }
			Starting{start}
		}

		Transitions{
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			damaged->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			normal->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->start[reset()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			damaged->damaged[rlevent\EchoServer.isDamaged()\EchoServer.rewardDamaged();EchoServer.propertyChecked();EchoServer.c_Damage_damaged++;]
			normal->normal[rlevent\EchoServer.isNormal()\EchoServer.rewardNormal();EchoServer.propertyChecked();EchoServer.c_Damage_normal++;]
			damaged->normal[rlevent\EchoServer.isNormal()\EchoServer.rewardNormal();EchoServer.propertyChecked();EchoServer.c_Damage_normal++;]
			normal->damaged[rlevent\EchoServer.isDamaged()\EchoServer.rewardDamaged();EchoServer.propertyChecked();EchoServer.c_Damage_damaged++;]
			start->normal[rlevent\\EchoServer.propertyChecked();EchoServer.c_Damage_normal++;]
			damaged->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			normal->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			start->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]
			default->default[rlevent()\\EchoServer.tot_reward = 0;EchoServer.resetAgent();]

		}

	}


}
