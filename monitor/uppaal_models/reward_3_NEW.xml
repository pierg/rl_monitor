<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Precision factor: from double to int
const int FACTOR = 100;

// Set the goals to achieve
int goalSpeed = 90;       // Kmh
int goalTrackPos = 0;     // middle of the lane

// Reward cumulative returned
int tot_reward;

int trackPos;
int speedX;
int damage;

int damage_pre;

// BEGIN SIMULATION VALUES 
// Distance between the car and the track axis. 
// The value is normalized w.r.t to the track width: 
// it is 0 when car is on the axis, -1 when the car is on the right edge of the track and +1 when it is on the left edge of the car. 
// Values greater than 1 or smaller than -1 mean that the car is outside of the track.
// We assume a limit between -5 and +5 (* FACTOR)
typedef int[-500, +500]      trackPos_T;
typedef int[-5, +5]          move_T;
typedef int[5, 10]           moveIncrement;
const int                    trackPos_Right_Limit = 500;
const int                    trackPos_Left_Limit = -500;
chan                         trackPos_C;
// END SIMULATION VALUES


// Speed of the car along the longitudinal axis of the car.
// We assume a limit between 0 and 100 ( *FACTOR)
typedef int[0, 10000]  speedX_T;







</declaration>
	<template>
		<name x="5" y="5">TrackPos</name>
		<declaration>int reward = 0;

// Track position guard functions
bool isCenter()
{
    return (-50 &lt;= trackPos &amp;&amp; trackPos &lt;= 50);
}

bool isLimitRoad()
{   
    return ((-100 &lt; trackPos &amp;&amp; trackPos &lt; -50) || (50 &lt; trackPos &amp;&amp; trackPos &lt; 100));
}

bool isRightOffRoad()
{
    return (trackPos &gt;= 100);
}

bool isLeftOffRoad()
{
    return (trackPos &lt;= -100);
}

// Track position update functions

void rewardLimitRoad(){
    reward += 0;
}

void rewardLeftOffRoad(){
    reward += -10;
}

void rewardRightOffRoad(){
    reward += -10;
}

void rewardCenter(){
    reward += +20;
}
</declaration>
		<location id="id0" x="-289" y="-773">
			<name x="-357" y="-807">leftOffRoad</name>
		</location>
		<location id="id1" x="153" y="-773">
			<name x="127" y="-816">limitRoad</name>
		</location>
		<location id="id2" x="153" y="-977">
			<name x="51" y="-1003">centerRoad</name>
		</location>
		<location id="id3" x="153" y="-1113">
			<name x="102" y="-1122">start</name>
		</location>
		<location id="id4" x="637" y="-765">
			<name x="613" y="-797">rightOffRoad</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id4"/>
			<target ref="id1"/>
			<label kind="guard" x="306" y="-765">isLimitRoad()</label>
			<label kind="synchronisation" x="425" y="-714">trackPos_C?</label>
			<label kind="assignment" x="399" y="-765">rewardLimitRoad()</label>
			<nail x="569" y="-765"/>
			<nail x="204" y="-765"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="280" y="-799">isRightOffRoad()</label>
			<label kind="synchronisation" x="382" y="-833">trackPos_C?</label>
			<label kind="assignment" x="399" y="-799">rewardRightOffRoad()</label>
			<nail x="195" y="-782"/>
			<nail x="586" y="-782"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-450" y="-773">isLeftOffRoad()</label>
			<label kind="synchronisation" x="-442" y="-731">trackPos_C?</label>
			<label kind="assignment" x="-484" y="-756">rewardLeftOffRoad()</label>
			<nail x="-348" y="-731"/>
			<nail x="-348" y="-773"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-178" y="-799">isLimitRoad()</label>
			<label kind="synchronisation" x="-76" y="-824">trackPos_C?</label>
			<label kind="assignment" x="-76" y="-799">rewardLimitRoad()</label>
			<nail x="-246" y="-782"/>
			<nail x="102" y="-782"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-187" y="-765">isLeftOffRoad()</label>
			<label kind="synchronisation" x="-136" y="-748">trackPos_C?</label>
			<label kind="assignment" x="-76" y="-765">rewardLeftOffRoad()</label>
			<nail x="110" y="-765"/>
			<nail x="-246" y="-765"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="127" y="-714">isLimitRoad()</label>
			<label kind="synchronisation" x="127" y="-680">trackPos_C?</label>
			<label kind="assignment" x="127" y="-697">rewardLimitRoad()</label>
			<nail x="127" y="-714"/>
			<nail x="187" y="-714"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="221" y="-943">isCenter()</label>
			<label kind="synchronisation" x="221" y="-884">trackPos_C?</label>
			<label kind="assignment" x="221" y="-926">rewardCenter()</label>
			<nail x="212" y="-799"/>
			<nail x="212" y="-952"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="119" y="-909">isCenter()</label>
			<label kind="synchronisation" x="119" y="-875">trackPos_C?</label>
			<label kind="assignment" x="102" y="-892">rewardCenter()</label>
			<nail x="137" y="-913"/>
			<nail x="169" y="-913"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="0" y="-943">isLimitRoad()</label>
			<label kind="synchronisation" x="8" y="-909">trackPos_C?</label>
			<label kind="assignment" x="-34" y="-926">rewardLimitRoad()</label>
			<nail x="93" y="-952"/>
			<nail x="93" y="-799"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="161" y="-1079">isCenter()</label>
			<label kind="synchronisation" x="161" y="-1011">trackPos_C?</label>
			<label kind="assignment" x="161" y="-1062">trackPos = 0,
rewardCenter()</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="705" y="-765">isRightOffRoad()</label>
			<label kind="synchronisation" x="671" y="-833">trackPos_C?</label>
			<label kind="assignment" x="705" y="-748">rewardRightOffRoad()</label>
			<nail x="697" y="-731"/>
			<nail x="697" y="-765"/>
		</transition>
	</template>
	<template>
		<name>Damage</name>
		<declaration>int reward = 0;

bool isDamaged(){
    return damage &gt; damage_pre;
}

bool isNormal(){
    return !isDamaged();
}

void rewardDamaged(){
    reward += -40;
}

void rewardNormal(){
    reward += 0;
}</declaration>
		<location id="id5" x="-289" y="-51">
			<name x="-264" y="-59">damaged</name>
		</location>
		<location id="id6" x="-289" y="-195">
			<name x="-281" y="-220">normal</name>
		</location>
		<location id="id7" x="-289" y="-314">
			<name x="-299" y="-348">start</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="-331" y="0">isDamaged()</label>
			<label kind="assignment" x="-348" y="17">rewardDamaged()</label>
			<nail x="-306" y="0"/>
			<nail x="-272" y="0"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id6"/>
			<label kind="guard" x="-442" y="-229">!isDamaged()</label>
			<label kind="assignment" x="-451" y="-212">rewardNormal()</label>
			<nail x="-340" y="-229"/>
			<nail x="-340" y="-195"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-264" y="-144">!isDamaged()</label>
			<label kind="assignment" x="-264" y="-127">rewardNormal()</label>
			<nail x="-264" y="-68"/>
			<nail x="-264" y="-178"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-408" y="-144">isDamaged()</label>
			<label kind="assignment" x="-442" y="-127">rewardDamaged()</label>
			<nail x="-315" y="-178"/>
			<nail x="-315" y="-68"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
		</transition>
	</template>
	<template>
		<name>Sim_TrackPos</name>
		<declaration>// We assume a limit between -5 and +5 (* FACTOR)
typedef int[-500, +500] trackPosT;</declaration>
		<location id="id8" x="-289" y="76">
		</location>
		<location id="id9" x="-187" y="-161">
			<name x="-170" y="-170">goingRight</name>
		</location>
		<location id="id10" x="-425" y="-170">
			<name x="-518" y="-178">goingLeft</name>
		</location>
		<init ref="id8"/>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<nail x="-161" y="17"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id10"/>
			<nail x="-450" y="17"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="select" x="-76" y="-178">i:moveIncrement</label>
			<label kind="guard" x="-76" y="-204">trackPos &lt;= trackPos_Right_Limit</label>
			<label kind="synchronisation" x="-76" y="-153">trackPos_C!</label>
			<label kind="assignment" x="-76" y="-127">trackPos = trackPos + i</label>
			<nail x="-85" y="-221"/>
			<nail x="-85" y="-68"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="select" x="-374" y="-110">i : moveIncrement</label>
			<label kind="guard" x="-399" y="-34">trackPos &gt;= trackPos_Left_Limit</label>
			<label kind="synchronisation" x="-374" y="-85">trackPos_C!</label>
			<label kind="assignment" x="-374" y="-59">trackPos = trackPos - i</label>
			<nail x="-221" y="-119"/>
			<nail x="-391" y="-119"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="select" x="-357" y="-289">i : moveIncrement</label>
			<label kind="guard" x="-357" y="-314">trackPos &lt;= trackPos_Right_Limit</label>
			<label kind="synchronisation" x="-357" y="-264">trackPos_C!</label>
			<label kind="assignment" x="-357" y="-238">trackPos = trackPos + i</label>
			<nail x="-366" y="-213"/>
			<nail x="-264" y="-213"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="select" x="-697" y="-161">i : moveIncrement</label>
			<label kind="guard" x="-799" y="-187">trackPos &gt;= trackPos_Left_Limit</label>
			<label kind="synchronisation" x="-654" y="-110">trackPos_C!</label>
			<label kind="assignment" x="-731" y="-136">trackPos = trackPos - i</label>
			<nail x="-569" y="-85"/>
			<nail x="-569" y="-229"/>
		</transition>
	</template>
	<template>
		<name>Sim_Speed</name>
		<declaration>

</declaration>
		<location id="id11" x="0" y="0">
		</location>
		<init ref="id11"/>
	</template>
	<template>
		<name>Speed</name>
		<declaration>

double angle;

</declaration>
		<location id="id12" x="-331" y="-544">
			<name x="-374" y="-578">Stuck</name>
		</location>
		<location id="id13" x="-136" y="-365">
			<name x="-170" y="-348">Turning</name>
		</location>
		<location id="id14" x="-127" y="-595">
			<name x="-110" y="-603">GoingStraight</name>
		</location>
		<location id="id15" x="-127" y="-748">
			<name x="-144" y="-799">start</name>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<nail x="-204" y="-501"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id14"/>
			<nail x="-221" y="-544"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<nail x="-272" y="-442"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id12"/>
			<nail x="-238" y="-603"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<nail x="-110" y="-391"/>
			<nail x="-110" y="-561"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<nail x="-153" y="-561"/>
			<nail x="-153" y="-391"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id14"/>
		</transition>
	</template>
	<system>
// List one or more processes to be composed into a system.
system TrackPos, Sim_TrackPos;</system>
	<queries>
		<query>
			<formula>A[](Process.rightOffRoad imply reward &lt;= -2)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[](TrackPos.leftOffRoad imply trackPos &lt;= -200)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E[](TrackPos.leftOffRoad imply trackPos &lt;= -200)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
