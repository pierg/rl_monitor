digraph _logic_Speed {
rankdir=LR;
node [shape = circle]; Stuck Turning GoingStraight default start;
node [shape = point]; _s_s;
_s_s -> start;
default -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
default -> default [ label = "(2) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
GoingStraight -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
GoingStraight -> GoingStraight [ label = "(2) rlevent\\EchoServer . isGoingStraight ( ) \\EchoServer . rewardStraight ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_GoingStraight ++ ; "];
GoingStraight -> Stuck [ label = "(3) rlevent\\EchoServer . isStuck ( ) \\EchoServer . rewardStuck ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_Stuck ++ ; "];
GoingStraight -> Turning [ label = "(4) rlevent\\EchoServer . isTurning ( ) \\EchoServer . rewardTurning ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_Turning ++ ; "];
GoingStraight -> default [ label = "(5) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
Stuck -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
Stuck -> Stuck [ label = "(2) rlevent\\EchoServer . isStuck ( ) \\EchoServer . rewardStuck ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_Stuck ++ ; "];
Stuck -> GoingStraight [ label = "(3) rlevent\\EchoServer . isGoingStraight ( ) \\EchoServer . rewardStraight ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_GoingStraight ++ ; "];
Stuck -> Turning [ label = "(4) rlevent\\EchoServer . isTurning ( ) \\EchoServer . rewardTurning ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_Turning ++ ; "];
Stuck -> default [ label = "(5) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
start -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
start -> start [ label = "(2) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
start -> GoingStraight [ label = "(3) rlevent\\\\EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_GoingStraight ++ ; "];
start -> default [ label = "(4) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
Turning -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
Turning -> Turning [ label = "(2) rlevent\\EchoServer . isTurning ( ) \\EchoServer . rewardTurning ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_Turning ++ ; "];
Turning -> Stuck [ label = "(3) rlevent\\EchoServer . isStuck ( ) \\EchoServer . rewardStuck ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_Stuck ++ ; "];
Turning -> GoingStraight [ label = "(4) rlevent\\EchoServer . isGoingStraight ( ) \\EchoServer . rewardStraight ( ) ; EchoServer . updateStuckCounter ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_Speed_GoingStraight ++ ; "];
Turning -> default [ label = "(5) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
}