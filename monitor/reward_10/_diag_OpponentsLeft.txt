digraph _logic_OpponentsLeft {
rankdir=LR;
node [shape = circle]; carCloseToTheLeft carToTheLeft carFarToTheLeft leftFree default start;
node [shape = point]; _s_s;
_s_s -> start;
carCloseToTheLeft -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
carCloseToTheLeft -> carFarToTheLeft [ label = "(2) rlevent\\EchoServer . isLeftCarDetectedFar ( ) \\EchoServer . rewardLeftCarFar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carFarToTheLeft ++ ; "];
carCloseToTheLeft -> leftFree [ label = "(3) rlevent\\EchoServer . isLeftFree ( ) \\EchoServer . rewardLeftFree ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_leftFree ++ ; "];
carCloseToTheLeft -> carCloseToTheLeft [ label = "(4) rlevent\\EchoServer . isLeftCarDetectedNearby ( ) \\EchoServer . rewardLeftCarClose ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carCloseToTheLeft ++ ; "];
carCloseToTheLeft -> carToTheLeft [ label = "(5) rlevent\\EchoServer . isLeftCarDetected ( ) \\EchoServer . rewardLeftCar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carToTheLeft ++ ; "];
carCloseToTheLeft -> default [ label = "(6) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
default -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
default -> default [ label = "(2) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
carFarToTheLeft -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
carFarToTheLeft -> carCloseToTheLeft [ label = "(2) rlevent\\EchoServer . isLeftCarDetectedNearby ( ) \\EchoServer . rewardLeftCarClose ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carCloseToTheLeft ++ ; "];
carFarToTheLeft -> carToTheLeft [ label = "(3) rlevent\\EchoServer . isLeftCarDetected ( ) \\EchoServer . rewardLeftCar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carToTheLeft ++ ; "];
carFarToTheLeft -> carFarToTheLeft [ label = "(4) rlevent\\EchoServer . isLeftCarDetectedFar ( ) \\EchoServer . rewardLeftCarFar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carFarToTheLeft ++ ; "];
carFarToTheLeft -> leftFree [ label = "(5) rlevent\\EchoServer . isLeftFree ( ) \\EchoServer . rewardLeftFree ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_leftFree ++ ; "];
carFarToTheLeft -> default [ label = "(6) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
carToTheLeft -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
carToTheLeft -> leftFree [ label = "(2) rlevent\\EchoServer . isLeftFree ( ) \\EchoServer . rewardLeftFree ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_leftFree ++ ; "];
carToTheLeft -> carToTheLeft [ label = "(3) rlevent\\EchoServer . isLeftCarDetected ( ) \\EchoServer . rewardLeftCar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carToTheLeft ++ ; "];
carToTheLeft -> carCloseToTheLeft [ label = "(4) rlevent\\EchoServer . isLeftCarDetectedNearby ( ) \\EchoServer . rewardLeftCarClose ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carCloseToTheLeft ++ ; "];
carToTheLeft -> carFarToTheLeft [ label = "(5) rlevent\\EchoServer . isLeftCarDetectedFar ( ) \\EchoServer . rewardLeftCarFar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carFarToTheLeft ++ ; "];
carToTheLeft -> default [ label = "(6) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
leftFree -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
leftFree -> carCloseToTheLeft [ label = "(2) rlevent\\EchoServer . isLeftCarDetectedNearby ( ) \\EchoServer . rewardLeftCarClose ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carCloseToTheLeft ++ ; "];
leftFree -> carToTheLeft [ label = "(3) rlevent\\EchoServer . isLeftCarDetected ( ) \\EchoServer . rewardLeftCar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carToTheLeft ++ ; "];
leftFree -> leftFree [ label = "(4) rlevent\\EchoServer . isLeftFree ( ) \\EchoServer . rewardLeftFree ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_leftFree ++ ; "];
leftFree -> carFarToTheLeft [ label = "(5) rlevent\\EchoServer . isLeftCarDetectedFar ( ) \\EchoServer . rewardLeftCarFar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carFarToTheLeft ++ ; "];
leftFree -> default [ label = "(6) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
start -> start [ label = "(1) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
start -> start [ label = "(2) reset\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
start -> carCloseToTheLeft [ label = "(3) rlevent\\EchoServer . isLeftCarDetectedNearby ( ) \\EchoServer . rewardLeftCarClose ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carCloseToTheLeft ++ ; "];
start -> carToTheLeft [ label = "(4) rlevent\\EchoServer . isLeftCarDetected ( ) \\EchoServer . rewardLeftCar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carToTheLeft ++ ; "];
start -> carFarToTheLeft [ label = "(5) rlevent\\EchoServer . isLeftCarDetectedFar ( ) \\EchoServer . rewardLeftCarFar ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_carFarToTheLeft ++ ; "];
start -> leftFree [ label = "(6) rlevent\\EchoServer . isLeftFree ( ) \\EchoServer . rewardLeftFree ( ) ; EchoServer . propertyChecked ( ) ; EchoServer . c_OpponentsLeft_leftFree ++ ; "];
start -> default [ label = "(7) rlevent\\\\EchoServer . tot_reward = 0 ; EchoServer . resetAgent ( ) ; "];
}